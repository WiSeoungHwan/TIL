//: [Previous](@previous)

/***************************************************
 "Hello, World!" 문자열을 출력하기 위한 코드 작성 ***************************************************/

print("Hello, World!")

/***************************************************
 2개의 정수를 입력 받아서 그 숫자들을 더한 뒤 결과를 정수로 반환하는 함수 작성
 ***************************************************/

func add(num1: Int, num2: Int) -> Int{
    return num1 + num2
}

/***************************************************
 2개의 정수를 입력 받아 그 숫자들을 곱한 뒤 결과값을 문자열로 반환하는 함수 작성
 ***************************************************/

func multiNumReturnString(num1: Int, num2: Int) -> String {
    return "\(num1 * num2)"
}

/***************************************************
 주어진 숫자가 짝수인지 홀수인지 판단하는 함수 작성 (switch 문으로 해결)
 ***************************************************/

func isEven(num: Int) -> Bool{
    switch num % 2 {
    case 0:
        return true
    case 1:
        return false
    default:
        return false
    }
    
}

isEven(num: 11)


/***************************************************
 Swift 3가지 다른 반복문 방식별로 각각 1부터 10까지 값을 더한 결과를 출력하는 코드 작성
 ***************************************************/

func useFor(){
    var num = 0
    for i in 1...10{
        num += i
    }
    print(num)
}

func useWhile(){
    var num = 0
    var i = 1
    while i < 11 {
        num += i
        i += 1
    }
    print(num)
}

func useRepeatWhile(){
    var num = 0
    var i = 1
    repeat{
        num += i
        i += 1
    } while i < 11
    
    print(num)
}

useFor()
useWhile()
useRepeatWhile()



/***************************************************
 Swift 에서 사용하는 네이밍 컨벤션의 종류를 나열하고 그것이 언제 사용되는지, 그리고 그 특징에 대해 설명
 ***************************************************/

// 대문자 카멜케이스
//class ,struct, enum, protocol

// 소문자 카멜케이스

//변수, 함수, 메서드




/***************************************************
 사전 지식 테스트 때 위 내용들을 푸신 분들은 거의 없다시피 했는데
 지금은 대부분 많이 쉬우시죠?
 그만큼 많이 발전하셨습니다. :)
 ***************************************************/

//: [Next](@next)
